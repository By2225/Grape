PROPOSAL

// Look a comment!

// global variable

shortestEdge=

// global node variable and initialization

(a=5)
(b=8)
(c=10)

// Serial graph notation
(5) <5> (b=4)

// Edge initialization defaults

(5) <2> (b=4)

// local variable

(a) <shortestEdge(a,b)> (b=4)

(5) <MyEdge()> (c=MyNode())

// Anonymous edge, directed

(5) > (c=MyNode())

// Anonympous edge, undirected

(5) - (c=MyNode())

// Anonymous node

()

// Function

// 

BACKEND

Edge type allows initializer optimization: 

Store graph as linked list? 
Store grpah as array?

/*

    node = {
        value,
        [Edge] // array of edges
    }

    MODULE: serial create node
    int32 prev = nullptr
    for each initialization:
        if node:
            create node
        if edge:
            create edge
    MODULE: create node
    get int32 prev
    if prev is nullptr:
        set prev 0 
    alloc int32 node

    MODULE: create edge
    
*/
